
What is a Container?
- A way to package application with all the necessary dependencies, configurations, system tools and runtime
- Portable artifact, easily shared and moved around
- Layers of images
- Mostly Linux Base Image, because small in standadized
- Application image on top


What is Docker?
- Virtualization software 
- Makes developing and deployuing applications much easier
- Packages application withh all the necessary dependencies, configurations, system tools and runtime


Development process before containers?
- Each developer needs to install and configure all services directly on their OS on their local machine

Development process with containers?
- Developers can use containers to run applications in isolated environments
- Containers can be run on any OS that supports the container runtime
- Docker standadized the process of running any service on local machine or in the cloud

Deployment process before containers?
- Deploying applications to production servers was a manual process
- Developers had to ensure that the production server had the same configuration as the development environment

Deployment process with containers?
- Containers can be used to deploy applications to production servers
- Docker artifacts can be used to deploy applications to production servers
- No environment configuration needed, as the container has everything it needs to run the application 

What parts of OS do docker virtualize?
- OS application layer. Docker virtualizes the application layer


DockerDesktop uses hyper-visor layer with linux distro to run containers on Windows/MacOS

What is a docker image?
- A read-only template with instructions for creating a Docker container
- An executable application artifact
- Includes app source code, but also complete environment configuration
- Add environment variables, create directories, set up network ports, etc.

And docker container is the running instance of the image. From 1 image you can run multiple containers

Docker Registries
- Repositories for storing and sharing Docker images
- Docker Hub is the default public registry


Container Port vs Host Port
- Application inside a container runs in an isolated Docker environment
- This allows us to run the same application running on the same port multiple times

- We need to expose the container port to the host port. This is called port binding

Command
docker run -d -p 9000:80 nginx:1.23


Docker Registry vs Docker Repository
- Docker Registry is a service that stores and distributes Docker images. Collection of repositories
- Docker Repository is a collection of related Docker images, often sharing a common base image


Docker Compose
- Tool for defining and running multi-container Docker applications
- Uses YAML files to configure application services
- Take whole config and map it to file (YAML)
- docker-compose.yml file


Docker Volumes
- A way to persist data generated by and used by Docker containers
- Volumes are stored outside the container's filesystem